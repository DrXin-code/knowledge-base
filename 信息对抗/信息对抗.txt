SHA散列破解
一、实验描述
SHA算法简介
安全哈希算法（SecureHashAlgorithm）主要适用于数字签名标准（DigitalSignatureStandardDSS）里面定义的数字签名算法（DigitalSignatureAlgorithmDSA）。对于长度小于2^64位的消息，SHA1会产生一个160位的消息摘要。该算法经过加密专家多年来的发展和改进已日益完善，并被广泛使用。该算法的思想是接收一段明文，然后以一种不可逆的方式将它转换成一段（通常更小）密文，也可以简单的理解为取一串输入码（称为预映射或信息），并把它们转化为长度较短、位数固定的输出序列即散列值（也称为信息摘要或信息认证代码）的过程。散列函数值可以说是对明文的一种“指纹”或是“摘要”所以对散列值的数字签名就可以视为对此明文的数字签名。
二、实验目标
了解SHA密码加密原理
学习SHA散列暴力破解的过程
三、实验环境
windows server 2003
工具目录：C:\实验工具集\05_日常应用安全

四、实验步骤
1.1在C:\实验工具集\05_日常应用安全\第5节SHA散列破解中，找到【MD5SHAFX】并双击打开。如图1所示



图1
1.2点击菜单栏中的【工具】―>【计算密码】，弹出加密界面。如图2所示



图2
1.3在【输入原文】中输入需要加密的原文，如abc，点击【计算】，即可计算出对应的散列值。如图3所示



图3
1.4将40位SHA1码中的散列值拷贝出来，点击【返回】，拷贝到【输入密码】中。如图4所示



图4
1.5点击【浏览】，选择字典。在C:\实验工具集\05_日常应用安全\第5节SHA散列破解中的a-z_3.dic。如图5所示



图5
1.6点击【开始】，即可进行暴力破解，爆破结果如下。如图6所示



图6




pwdump导出本地SAM散列

一、实验描述
Windows hash由二部分组成，分别是LM HASH&NT HASH。Windows系统关于hash的组成如下：
用户名称:RID:LM-HASH值:NT-HASH值

LMHASH生成规则:
1.用户的密码被限制为最多14个字符。
2.用户的密码转换为大写。
3.系统中用户的密码编码使用了OEM内码页。
4.密码不足14字节将会用0来补全。
5.固定长度的密码被分成两个7byte部分。每部分转换成比特流，在分7bit为一组末尾加0，组成新的编码。
6.上步骤得到的8byte二组，分别作为DES
key为“KGS!@#$%”进行加密。
7.将二组DES加密后的编码拼接，得到最终LMHASH值。
NThash生成原理
IBM设计的LMHash算法存在几个弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，NTLMHash便应运而生。假设明文口令是”123456”，首先转换成Unicode字符串，与LMHash算法不同，这次不需要添加0补足14字节
"123456"-&gt;310032003300340035003600。
从ASCII串转换成Unicode串时，使用little-endian序，微软在设计整个SMB协议时就没考虑过big-endian序，ntoh()、hton()函数不宜用在SMB报文解码中。0×80之前的标准ASCII码转换成Unicode码，就是简单地从0x变成0×00。此类标准ASCII串按little-endian序转换成Unicode串，就是简单地在原有每个字节之后添加0×00。对所获取的Unicode串进行标准MD4单向哈希，无论数据源有多少字节，MD4固定产生128-bit的哈希值，16字节310032003300340035003600-进行标准MD4单向哈希->32ED87BDB5FDC5E9CBA88547376818D4，就得到了最后的NTLMHash
NTLM Hash:32ED87BDB5FDC5E9CBA88547376818D4。
二、实验目标
理解pwdump导出SAM的原理
学习pwdump导出SAM的过程
三、实验环境
此类情况是有system权限时操作的，常用于入侵者获得webshell后，通过提权的方式获得SAM三列，本次实验实在本机操作进行的。

工具目录:C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列

四、实验步骤
1.获得系统SAM值
1.1打开开始菜单，找到“运行”,输入cmd。如图1所示



图1
1.2找到Pwdump工具，工具位置在(C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列)。在cmd命令行中输入：cd C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列。如图2所示



图2
1.3 继续在cmd中输入命令：pwdump.exe。如图3所示



图3
1.4 以上就是进入了pwdump的界面，我们输入pwdump.exe --dump-hash-local命令，即可获得当前用户名的SAM值。如图4所示



图4
1.5 我们成功的获得了当前用户表的hash值，至此实验结束。如果遇到闪退BUG，可执行pwdump.exe --dump-hash-local>1.txt，这样SAM信息会被导出在pwdump.exe目录下的1.txt中。









LC5破解本地SAM散列

一、实验描述
Windowshash由二部分组成，分别是LMHASH&NTHASH。Windows系统关于hash的组成如下：
用户名称:RID:LM-HASH值:NT-HASH值

LMHASH生成规则：
1.用户的密码被限制为最多14个字符。
2.用户的密码转换为大写。
3.系统中用户的密码编码使用了OEM内码页。
4.密码不足14字节将会用0来补全。
5.固定长度的密码被分成两个7byte部分。每部分转换成比特流，在分7bit为一组末尾加0，组成新的编码。
6.上步骤得到的8byte二组，分别作为DES
key为“KGS!@#$%”进行加密。
7.将二组DES加密后的编码拼接，得到最终LMHASH值。
NThash生成原理：
IBM设计的LMHash算法存在几个弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，NTLMHash便应运而生。假设明文口令是”123456”，首先转换成Unicode字符串，与LMHash算法不同，这次不需要添加0补足14字节
"123456"-&gt;310032003300340035003600。
从ASCII串转换成Unicode串时，使用little-endian序，微软在设计整个SMB协议时就没考虑过big-endian序，ntoh()、hton()函数不宜用在SMB报文解码中。0×80之前的标准ASCII码转换成Unicode码，就是简单地从0x变成0×00。此类标准ASCII串按little-endian序转换成Unicode串，就是简单地在原有每个字节之后添加0×00。对所获取的Unicode串进行标准MD4单向哈希，无论数据源有多少字节，MD4固定产生128-bit的哈希值，16字节310032003300340035003600-进行标准MD4单向哈希->32ED87BDB5FDC5E9CBA88547376818D4，就得到了最后的NTLMHash
NTLM Hash:32ED87BDB5FDC5E9CBA88547376818D4.
二、实验目标
理解LC5破解本地SAM散列的原理
学习LC5破解本地SAM散列的过程
三、实验环境
本次环境是模拟黑客在已经获得目标机HASH的情况下，通过LC5的密码字典对目标HASH进行破解
工具目录:C:\实验工具集\02_主机安全\02_Windows口令安全与破解

四、实验步骤
1.获得系统SAM值
1.1打开开始菜单，找到“运行”,输入cmd。如图1所示



图1
1.2找到Pwdump工具，工具位置在(C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列)。在cmd命令行中输入：cd C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列。如图2所示



图2
1.3继续在cmd中输入命令：PwDump.exe。如图3所示

图3
1.4以上就是进入了pwdump的界面，我们输入PwDump.exe --dump-hash-local命令，即可获得当前用户名的SAM。如图4所示



图4
1.5右键标记，复制到文本中，并保存到桌面上。如图5所示



图5
1.6如果遇到pwdump.exe闪退，可执行PwDump.exe --dump-hash-local>1.txt，这样即可将SAM信息导出到pwdump.exe目录下的1.txt文件中。

2.获得系统密码
2.1打开C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第二节LC5破解本地SAM散列，打开lc5文件夹后，打开lc5.exe（若弹出向导，单击下一步直至完成）。如图6所示



图6
2.2打开绿色标识”导入”并选择”PWDUMP文件导入”选项。如图7所示



图7
2.3单击”浏览”按钮,选择我们已经保存到桌面上的密码文件,单击确定。如图8所示



图8
2.4选择我们存放hash值的文档。如图9所示



图9
2.5单击”会话”->”会话选项”，导入密码表格。如图10所示



图10
2.6单击”字典列表”->”增加”->选择字典文件->单击”确定”按钮（字典文件在软件目录下，以dic结尾），单击确定。如图11所示



图11
2.7点击”开始破解”按钮，开始破解。如图12所示



图12
2.8密码被成功破解出来。如图13所示



图13
2.7至此，LC5破解本地SAM实验完成。











saminside破解本地sam散列

一、实验描述
Windowshash由二部分组成，分别是LM HASH&NT HASH。Windows系统关于hash的组成如下：
用户名称:RID:LM-HASH值:NT-HASH值

LMHASH生成规则:
1.用户的密码被限制为最多14个字符。
2.用户的密码转换为大写。
3.系统中用户的密码编码使用了OEM内码页。
4.密码不足14字节将会用0来补全。
5.固定长度的密码被分成两个7byte部分。每部分转换成比特流，在分7bit为一组末尾加0，组成新的编码。
6.上步骤得到的8byte二组，分别作为DESkey为“KGS!@#$%”进行加密。
7.将二组DES加密后的编码拼接，得到最终LMHASH值。
NThash生成原理
IBM设计的LMHash算法存在几个弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，NTLMHash便应运而生。假设明文口令是”123456”，首先转换成Unicode字符串，与LMHash算法不同，这次不需要添加0补足14字节
"123456"->310032003300340035003600。
从ASCII串转换成Unicode串时，使用little-endian序，微软在设计整个SMB协议时就没考虑过big-endian序，ntoh()、hton()函数不宜用在SMB报文解码中。0×80之前的标准ASCII码转换成Unicode码，就是简单地从0x变成0×00。此类标准ASCII串按little-endian序转换成Unicode串，就是简单地在原有每个字节之后添加0×00。对所获取的Unicode串进行标准MD4单向哈希，无论数据源有多少字节，MD4固定产生128-bit的哈希值，16字节310032003300340035003600-进行标准MD4单向哈希->32ED87BDB5FDC5E9CBA88547376818D4，就得到了最后的NTLMHash
NTLM Hash:32ED87BDB5FDC5E9CBA88547376818D4。
二、实验目标
理解saminside破解本地sam散列的原理
学习psaminside破解本地sam散列的过程
三、实验环境
本次环境是模拟黑客在已经获得目标机HASH的情况下，通过saminside对目标HASH进行破解
工具目录:C:\实验工具集\02_主机安全\02_Windows口令安全与破解

四、实验步骤
1.获得系统SAM值
1.1打开cmd命令行，切换至C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第3节 saminside破解本地sam散列，在cmd下打开PwDump.exe。如图1所示



图1
1.2直接在cmd中输入命令pwdump.exe。如图2所示



图2
1.3以上就是进入了pwdump的界面，我们输入pwdump.exe --dump-hash-local命令，即可获得当前用户名的SAM。如图3所示



图3
1.4 我们成功的获得了当前用户表的hash值。如图4所示



图4
1.5右键标记，复制到文本中。如图5所示



图5
1.6如果遇到pwdump.exe闪退，可执行pwdump.exe --dump-hash-local->1.txt，这样既可将SAM信息导出到pwdump.exe目录下的1.txt文件中。

2.获得系统口令
2.1打开C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第3节saminside破解本地sam散列文件夹，打开SAMInside.exe。如图6所示



图6
2.2导入我们保存在桌面的HASH值文档。如图7所示



图7
2.3选中要破解的账户。如图8所示



图8
2.4点击’audit’,依次勾选‘NT-HASH ATTACK’和’Dictionary ATTACK‘。如图9所示



图9
2.5点击工具箱下的opintos选项。如图10所示



图10
2.6选择Dictionaries选项。如图11所示



图11
2.7选择‘add‘,选项，添加C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第3节saminside破解本地sam散列\other\SAMInside\Dictionaries文件夹下的InsidePro(Mini).dic密码字典。如图12所示



图12
2.8选择开始按钮（黄色>号），密码被破解出来，至此实验结束。如图13所示



图14









Opcrack挂彩虹表破解本地sam散列

一、实验描述
彩虹表是一个用于加密散列函数逆运算的预先计算好的表,常用于破解加密过的密码散列。一般主流的彩虹表都在100G以上。查找表常常用于包含有限字符固定长度纯文本密码的加密。这是以空间换时间的典型实践,在每一次尝试都计算的暴力破解中使用更少的计算能力和更多的储存空间，但却比简单的每个输入一条散列的翻查表使用更少的储存空间和更多的计算性能。使用加盐的KDF函数可以使这种攻击难以实现令。
为了保证后台数据安全,现在的做法都是使用哈希算法对明文密码进行加密存储.由于哈希算法不可逆向,因此由密码逆向出明文运算就成了不可能。
起初黑客们通过字典穷举的方法进行破解,这对简单的密码和简单的密码系统是可行的,但对于复杂的密码和密码系统,则会产生无穷大的字典.为了解决逆向破解的难题,黑客们就产生了彩虹表的技术。
为了解决所需要字典大小，减少产生和查找字典的时间,黑客选择性存储一个较小的可逆向的长链的密码的哈希值。虽然在破解单个密文,使用哈希链接的方式需要更多的计算时间的反向查找，但字典要小得多，因此可以存储更长的密码的哈希值。彩虹表是此链接技术的一种改进，并提供一种称为碰撞链的解决方案.其基于MartinHellman理论(基于内存与时间的权重理论)
彩虹表打大小依据需要而定，有上T数据的彩虹表，也有几百M的数据，不同的情况下选择不同的彩虹表，可以快速得到结果。
二、实验目标
理解Opcrack挂彩虹表破解本地sam散列的原理
学习Opcrack挂彩虹表破解本地sam散列的过程
三、实验环境
本次环境是模拟黑客在已经获得目标机HASH的情况下，通过saminside对目标HASH进行破解

工具目录:C:\实验工具集\02_主机安全\02_Windows口令安全与破解

四、实验步骤
1.获得系统SAM值
1.1打开开始菜单，找到“运行”,输入cmd。如图1所示



图1
1.2找到Pwdump工具，工具位置在(C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列)。在cmd命令行中输入cd C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第1节 pwdump导出本地SAM散列。如图2所示



图2
1.3继续在cmd中输入命令：pwdump.exe。如图3所示

图3
1.4以上就是进入了pwdump的界面，我们输入pwdump.exe --dump-hash-local命令，即可获得当前用户名的SAM。如图4所示



图4
1.5右键标记，复制到文本中，并保存到桌面上。如图5所示



图5
1.6如果遇到pwdump.exe闪退，可执行pwdump.exe --dump-hash-local>1.txt，这样既可将SAM信息导出到pwdump.exe目录下的1.txt文件中。

2.使用Opcrack挂彩虹表破解本地sam
2.1打开C:\实验工具集\02_主机安全\02_Windows口令安全与破解\第4节Opcraack挂彩虹表破解本地SAM散列文件夹中的ophcrack.exe。如图6所示



图6
2.2下面绿色的就是我们加挂的彩虹表。如图7所示



图7
2.3我们点击”Load”按钮,选择Single hash。如图8所示



图8
2.4把我们保存在文档中的hash单独复制出来。如图9所示



图9
2.5确定后,我们点击软件的Crack。如图10所示



图10
2.6等待破解，成功后会在软件中显示。如图11所示



图11
2.7密码被破解出来，至此实验结束。